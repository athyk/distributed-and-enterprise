# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import community_joins_pb2 as community__joins__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in community_joins_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CommunityJoinsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.JoinCommunity = channel.unary_unary(
                '/CommunityJoins/JoinCommunity',
                request_serializer=community__joins__pb2.CommunityActionRequest.SerializeToString,
                response_deserializer=community__joins__pb2.CommunityActionResponse.FromString,
                _registered_method=True)
        self.LeaveCommunity = channel.unary_unary(
                '/CommunityJoins/LeaveCommunity',
                request_serializer=community__joins__pb2.CommunityActionRequest.SerializeToString,
                response_deserializer=community__joins__pb2.CommunityActionResponse.FromString,
                _registered_method=True)
        self.WithCommunity = channel.unary_unary(
                '/CommunityJoins/WithCommunity',
                request_serializer=community__joins__pb2.CommunityActionRequest.SerializeToString,
                response_deserializer=community__joins__pb2.CommunityActionResponse.FromString,
                _registered_method=True)
        self.InviteToCommunity = channel.unary_unary(
                '/CommunityJoins/InviteToCommunity',
                request_serializer=community__joins__pb2.CommunityInviteRequest.SerializeToString,
                response_deserializer=community__joins__pb2.CommunityActionResponse.FromString,
                _registered_method=True)


class CommunityJoinsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def JoinCommunity(self, request, context):
        """JoinCommunity adds a user to the specified community

        If the community is private, they request to be added
        If already invited to a private community, they can join it
        If they are banned, they can not join the community
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LeaveCommunity(self, request, context):
        """LeaveCommunity removes a user from the community

        If they are banned, the action is interrupted.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WithCommunity(self, request, context):
        """WithCommunity checks whether the user is apart of the community or invited
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InviteToCommunity(self, request, context):
        """InviteToCommunity sends an invitation to the user and records it on the community

        If requested to join, they are added to the community
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CommunityJoinsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'JoinCommunity': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinCommunity,
                    request_deserializer=community__joins__pb2.CommunityActionRequest.FromString,
                    response_serializer=community__joins__pb2.CommunityActionResponse.SerializeToString,
            ),
            'LeaveCommunity': grpc.unary_unary_rpc_method_handler(
                    servicer.LeaveCommunity,
                    request_deserializer=community__joins__pb2.CommunityActionRequest.FromString,
                    response_serializer=community__joins__pb2.CommunityActionResponse.SerializeToString,
            ),
            'WithCommunity': grpc.unary_unary_rpc_method_handler(
                    servicer.WithCommunity,
                    request_deserializer=community__joins__pb2.CommunityActionRequest.FromString,
                    response_serializer=community__joins__pb2.CommunityActionResponse.SerializeToString,
            ),
            'InviteToCommunity': grpc.unary_unary_rpc_method_handler(
                    servicer.InviteToCommunity,
                    request_deserializer=community__joins__pb2.CommunityInviteRequest.FromString,
                    response_serializer=community__joins__pb2.CommunityActionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CommunityJoins', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('CommunityJoins', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CommunityJoins(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def JoinCommunity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommunityJoins/JoinCommunity',
            community__joins__pb2.CommunityActionRequest.SerializeToString,
            community__joins__pb2.CommunityActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LeaveCommunity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommunityJoins/LeaveCommunity',
            community__joins__pb2.CommunityActionRequest.SerializeToString,
            community__joins__pb2.CommunityActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WithCommunity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommunityJoins/WithCommunity',
            community__joins__pb2.CommunityActionRequest.SerializeToString,
            community__joins__pb2.CommunityActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InviteToCommunity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommunityJoins/InviteToCommunity',
            community__joins__pb2.CommunityInviteRequest.SerializeToString,
            community__joins__pb2.CommunityActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
