"""
Django settings for unihub_project project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv

from backend.common.files import StorageClient
from backend.common.services import AccountsClient, TagsClient, DegreesClient
from backend.common.services.community.community import CommunityClient
from backend.common.services.community.announcement import CommunityAnnouncementClient

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", "django-insecure--88jjjUniHub")

APPEND_SLASH = False

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get("DEBUG", default=0))

ALLOWED_HOSTS = ["localhost", "127.0.0.1"]
if not DEBUG and os.environ.get("DJANGO_ALLOWED_HOSTS"):
    ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(",")

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.staticfiles",
    "corsheaders",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
]

ROOT_URLCONF = "unihub_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "unihub_project.wsgi.application"

# Caches are done in the backend/common/services and databases in their respective service directories.

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-gb"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Image handling
S3_ACCESS_KEY_ID = os.environ.get("MINIO_ROOT_USER", "minio")
S3_ACCESS_KEY = os.environ.get("MINIO_ROOT_PASSWORD", "minio123")
S3_BUCKET_NAME = os.environ.get("MINIO_BUCKET_NAME", "unihub")
S3_ENDPOINT_URL = os.environ.get("MINIO_ENDPOINT", "http://minio:9000")
S3_URL = os.environ.get("S3_URL", "http://localhost:9000")

StorageClient.initialise(S3_ENDPOINT_URL, S3_ACCESS_KEY_ID, S3_ACCESS_KEY, S3_BUCKET_NAME, S3_URL)
CommunityClient.initialise("community-service:" + os.environ.get('Community_PORT', '50052'), os.environ.get('REDIS_URL', 'redis://localhost:6379/0'),)
CommunityAnnouncementClient.initialise("community-service:" + os.environ.get('Community_PORT', '50052'), os.environ.get('REDIS_URL', 'redis://localhost:6379/0'),)
AccountsClient.initialise("account-service:" + os.environ.get('ACC_PORT', '50053'), os.environ.get('REDIS_URL', 'redis://localhost:6379/0'),)
TagsClient.initialise("tag-service:" + os.environ.get('TAG_PORT', '50054'), os.environ.get('REDIS_URL', 'redis://localhost:6379/0'),)
DegreesClient.initialise("degree-service:" + os.environ.get('DEGREE_PORT', '50055'), os.environ.get('REDIS_URL', 'redis://localhost:6379/0'),)

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
]